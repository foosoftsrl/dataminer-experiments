// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 10000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int iterationcounter_10000 = 10000;
	/// <summary>PID: 10000 | Type: read</summary>
	public const int iterationcounter = 10000;
	/// <summary>PID: 10001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int debugmsg_10001 = 10001;
	/// <summary>PID: 10001 | Type: read</summary>
	public const int debugmsg = 10001;
	public class Write
	{
		/// <summary>PID: 10002 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processxml_10002 = 10002;
		/// <summary>PID: 10002 | Type: write</summary>
		public const int processxml = 10002;
	}
	public class Tablexmlfromurl
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurlid_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int tablexmlfromurlid = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurltitle_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int tablexmlfromurltitle = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurltime_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int tablexmlfromurltime = 1003;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurlid_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int tablexmlfromurlid = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurltitle_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int tablexmlfromurltitle = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tablexmlfromurltime_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int tablexmlfromurltime = 2;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 10002  | Type: write | DISCREETS: Process XML = check</summary>
	public System.Object Processxml {get { return Protocol.GetParameter(10002); }set { Protocol.SetParameter(10002, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	TablexmlfromurlQActionTable tablexmlfromurl { get; set; }
	object Afterstartup_dummy { get; set; }
	object Triggerqaction_dummy { get; set; }
	object Tablexmlfromurlid_1001 { get; set; }
	object Tablexmlfromurlid { get; set; }
	object Tablexmlfromurltitle_1002 { get; set; }
	object Tablexmlfromurltitle { get; set; }
	object Tablexmlfromurltime_1003 { get; set; }
	object Tablexmlfromurltime { get; set; }
	object Iterationcounter_10000 { get; set; }
	object Iterationcounter { get; set; }
	object Debugmsg_10001 { get; set; }
	object Debugmsg { get; set; }
	object Processxml_10002 { get; set; }
	object Processxml { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public TablexmlfromurlQActionTable tablexmlfromurl { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: dummy</summary>
	public System.Object Triggerqaction_dummy {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurlid_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Tablexmlfromurlid {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurltitle_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Tablexmlfromurltitle {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurltime_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Tablexmlfromurltime {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 10000  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iterationcounter_10000 {get { return GetParameter(10000); }set { SetParameter(10000, value); }}
	/// <summary>PID: 10000  | Type: read</summary>
	public System.Object Iterationcounter {get { return GetParameter(10000); }set { SetParameter(10000, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Debugmsg_10001 {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	public System.Object Debugmsg {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10002  | Type: write | DISCREETS: Process XML = check</summary>
	public System.Object Processxml_10002 {get { return GetParameter(10002); }set { SetParameter(10002, value); }}
	/// <summary>PID: 10002  | Type: write | DISCREETS: Process XML = check</summary>
	public System.Object Processxml {get { return Write.Processxml; }set { Write.Processxml = value; }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		tablexmlfromurl = new TablexmlfromurlQActionTable(this, 1000, "tablexmlfromurl");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class TablexmlfromurlQActionTable : QActionTable, IEnumerable<TablexmlfromurlQActionRow>
{
	public TablexmlfromurlQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<TablexmlfromurlQActionRow> GetEnumerator() { return new QActionTableEnumerator<TablexmlfromurlQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class TablexmlfromurlQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurlid_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Tablexmlfromurlid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurltitle_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Tablexmlfromurltitle { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tablexmlfromurltime_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Tablexmlfromurltime { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public TablexmlfromurlQActionRow() : base(0, 3) { }
	public TablexmlfromurlQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator TablexmlfromurlQActionRow(System.Object[] source) { return new TablexmlfromurlQActionRow(source); }
	public static implicit operator System.Object[](TablexmlfromurlQActionRow source) { return source.ToObjectArray(); }
}
}
