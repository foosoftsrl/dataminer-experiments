// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 7 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int channelnameadsales_7 = 7;
	/// <summary>PID: 7 | Type: read</summary>
	public const int channelnameadsales = 7;
	/// <summary>PID: 9 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int urimediator_9 = 9;
	/// <summary>PID: 9 | Type: read</summary>
	public const int urimediator = 9;
	/// <summary>PID: 11 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int channenamemediator_11 = 11;
	/// <summary>PID: 11 | Type: read</summary>
	public const int channenamemediator = 11;
	/// <summary>PID: 13 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int maxresultsmediator_13 = 13;
	/// <summary>PID: 13 | Type: read</summary>
	public const int maxresultsmediator = 13;
	/// <summary>PID: 10001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int adsalesdebugmsg_10001 = 10001;
	/// <summary>PID: 10001 | Type: read</summary>
	public const int adsalesdebugmsg = 10001;
	/// <summary>PID: 10003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int adsalesfilename_10003 = 10003;
	/// <summary>PID: 10003 | Type: read</summary>
	public const int adsalesfilename = 10003;
	/// <summary>PID: 10101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mediatordebugmsg_10101 = 10101;
	/// <summary>PID: 10101 | Type: read</summary>
	public const int mediatordebugmsg = 10101;
	/// <summary>PID: 10200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mergediterationcounter_10200 = 10200;
	/// <summary>PID: 10200 | Type: read</summary>
	public const int mergediterationcounter = 10200;
	/// <summary>PID: 10201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mergeddebugmsg_10201 = 10201;
	/// <summary>PID: 10201 | Type: read</summary>
	public const int mergeddebugmsg = 10201;
	/// <summary>PID: 10301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int wondebugmsg_10301 = 10301;
	/// <summary>PID: 10301 | Type: read</summary>
	public const int wondebugmsg = 10301;
	/// <summary>PID: 10303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int wonfilename_10303 = 10303;
	/// <summary>PID: 10303 | Type: read</summary>
	public const int wonfilename = 10303;
	public class Write
	{
		/// <summary>PID: 4 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pgbconfiguration_4 = 4;
		/// <summary>PID: 4 | Type: write</summary>
		public const int pgbconfiguration = 4;
		/// <summary>PID: 8 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int channelnameadsales_8 = 8;
		/// <summary>PID: 8 | Type: write</summary>
		public const int channelnameadsales = 8;
		/// <summary>PID: 10 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int urimediator_10 = 10;
		/// <summary>PID: 10 | Type: write</summary>
		public const int urimediator = 10;
		/// <summary>PID: 12 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int channenamemediator_12 = 12;
		/// <summary>PID: 12 | Type: write</summary>
		public const int channenamemediator = 12;
		/// <summary>PID: 14 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int maxresultsmediator_14 = 14;
		/// <summary>PID: 14 | Type: write</summary>
		public const int maxresultsmediator = 14;
		/// <summary>PID: 10202 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mergedprocesstable_10202 = 10202;
		/// <summary>PID: 10202 | Type: write</summary>
		public const int mergedprocesstable = 10202;
	}
	public class Adsales
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestime_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int adsalestime = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestitle_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int adsalestitle = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesreconcilekey_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int adsalesreconcilekey = 1003;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestime_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int adsalestime = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestitle_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int adsalestitle = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesreconcilekey_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int adsalesreconcilekey = 2;
		}
	}
	public class Mediator
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 2001</summary>
		public const int indexColumnPid = 2001;
		public class Pid
		{
			/// <summary>PID: 2001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorid_2001 = 2001;
			/// <summary>PID: 2001 | Type: read</summary>
			public const int mediatorid = 2001;
			/// <summary>PID: 2002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorreconcilekey_2002 = 2002;
			/// <summary>PID: 2002 | Type: read</summary>
			public const int mediatorreconcilekey = 2002;
			/// <summary>PID: 2003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatortitle_2003 = 2003;
			/// <summary>PID: 2003 | Type: read</summary>
			public const int mediatortitle = 2003;
			/// <summary>PID: 2004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatordate_2004 = 2004;
			/// <summary>PID: 2004 | Type: read</summary>
			public const int mediatordate = 2004;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorid_2001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mediatorid = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorreconcilekey_2002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int mediatorreconcilekey = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatortitle_2003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int mediatortitle = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatordate_2004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int mediatordate = 3;
		}
	}
	public class Won
	{
		/// <summary>PID: 3000</summary>
		public const int tablePid = 3000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 3001</summary>
		public const int indexColumnPid = 3001;
		public class Pid
		{
			/// <summary>PID: 3001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonstartdate_3001 = 3001;
			/// <summary>PID: 3001 | Type: read</summary>
			public const int wonstartdate = 3001;
			/// <summary>PID: 3002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wontitle_3002 = 3002;
			/// <summary>PID: 3002 | Type: read</summary>
			public const int wontitle = 3002;
			/// <summary>PID: 3003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonreconcilekey_3003 = 3003;
			/// <summary>PID: 3003 | Type: read</summary>
			public const int wonreconcilekey = 3003;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonstartdate_3001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int wonstartdate = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wontitle_3002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int wontitle = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonreconcilekey_3003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int wonreconcilekey = 2;
		}
	}
	public class Mergedtable
	{
		/// <summary>PID: 4000</summary>
		public const int tablePid = 4000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 4001</summary>
		public const int indexColumnPid = 4001;
		public class Pid
		{
			/// <summary>PID: 4001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedreconcilekey_4001 = 4001;
			/// <summary>PID: 4001 | Type: read</summary>
			public const int mergedreconcilekey = 4001;
			/// <summary>PID: 4002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedproductcode_4002 = 4002;
			/// <summary>PID: 4002 | Type: read</summary>
			public const int mergedproductcode = 4002;
			/// <summary>PID: 4003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedadsalestime_4003 = 4003;
			/// <summary>PID: 4003 | Type: read</summary>
			public const int mergedadsalestime = 4003;
			/// <summary>PID: 4004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedduration_4004 = 4004;
			/// <summary>PID: 4004 | Type: read</summary>
			public const int mergedduration = 4004;
			/// <summary>PID: 4005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavewon_4005 = 4005;
			/// <summary>PID: 4005 | Type: read</summary>
			public const int mergedhavewon = 4005;
			/// <summary>PID: 4006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavemediator_4006 = 4006;
			/// <summary>PID: 4006 | Type: read</summary>
			public const int mergedhavemediator = 4006;
			/// <summary>PID: 4007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedwontime_4007 = 4007;
			/// <summary>PID: 4007 | Type: read</summary>
			public const int mergedwontime = 4007;
			/// <summary>PID: 4008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedmediatortime_4008 = 4008;
			/// <summary>PID: 4008 | Type: read</summary>
			public const int mergedmediatortime = 4008;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedreconcilekey_4001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mergedreconcilekey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedproductcode_4002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int mergedproductcode = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedadsalestime_4003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int mergedadsalestime = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedduration_4004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int mergedduration = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavewon_4005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int mergedhavewon = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavemediator_4006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int mergedhavemediator = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedwontime_4007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int mergedwontime = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedmediatortime_4008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int mergedmediatortime = 7;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration {get { return Protocol.GetParameter(4); }set { Protocol.SetParameter(4, value); }}
	/// <summary>PID: 8  | Type: write</summary>
	public System.Object Channelnameadsales {get { return Protocol.GetParameter(8); }set { Protocol.SetParameter(8, value); }}
	/// <summary>PID: 10  | Type: write</summary>
	public System.Object Urimediator {get { return Protocol.GetParameter(10); }set { Protocol.SetParameter(10, value); }}
	/// <summary>PID: 12  | Type: write</summary>
	public System.Object Channenamemediator {get { return Protocol.GetParameter(12); }set { Protocol.SetParameter(12, value); }}
	/// <summary>PID: 14  | Type: write</summary>
	public System.Object Maxresultsmediator {get { return Protocol.GetParameter(14); }set { Protocol.SetParameter(14, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable {get { return Protocol.GetParameter(10202); }set { Protocol.SetParameter(10202, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	AdsalesQActionTable adsales { get; set; }
	/// <summary>PID: 2000</summary>
	MediatorQActionTable mediator { get; set; }
	/// <summary>PID: 3000</summary>
	WonQActionTable won { get; set; }
	/// <summary>PID: 4000</summary>
	MergedtableQActionTable mergedtable { get; set; }
	object Afterstartup_dummy { get; set; }
	object Triggerqaction_dummy { get; set; }
	object Pgbconfiguration_4 { get; set; }
	object Pgbconfiguration { get; set; }
	object Title_begin_urlconfig__fixed { get; set; }
	object Title_end_urlconfig__fixed { get; set; }
	object Channelnameadsales_7 { get; set; }
	object Channelnameadsales { get; set; }
	object Channelnameadsales_8 { get; set; }
	object Urimediator_9 { get; set; }
	object Urimediator { get; set; }
	object Urimediator_10 { get; set; }
	object Channenamemediator_11 { get; set; }
	object Channenamemediator { get; set; }
	object Channenamemediator_12 { get; set; }
	object Maxresultsmediator_13 { get; set; }
	object Maxresultsmediator { get; set; }
	object Maxresultsmediator_14 { get; set; }
	object Adsalestime_1001 { get; set; }
	object Adsalestime { get; set; }
	object Adsalestitle_1002 { get; set; }
	object Adsalestitle { get; set; }
	object Adsalesreconcilekey_1003 { get; set; }
	object Adsalesreconcilekey { get; set; }
	object Mediatorid_2001 { get; set; }
	object Mediatorid { get; set; }
	object Mediatorreconcilekey_2002 { get; set; }
	object Mediatorreconcilekey { get; set; }
	object Mediatortitle_2003 { get; set; }
	object Mediatortitle { get; set; }
	object Mediatordate_2004 { get; set; }
	object Mediatordate { get; set; }
	object Wonstartdate_3001 { get; set; }
	object Wonstartdate { get; set; }
	object Wontitle_3002 { get; set; }
	object Wontitle { get; set; }
	object Wonreconcilekey_3003 { get; set; }
	object Wonreconcilekey { get; set; }
	object Mergedreconcilekey_4001 { get; set; }
	object Mergedreconcilekey { get; set; }
	object Mergedproductcode_4002 { get; set; }
	object Mergedproductcode { get; set; }
	object Mergedadsalestime_4003 { get; set; }
	object Mergedadsalestime { get; set; }
	object Mergedduration_4004 { get; set; }
	object Mergedduration { get; set; }
	object Mergedhavewon_4005 { get; set; }
	object Mergedhavewon { get; set; }
	object Mergedhavemediator_4006 { get; set; }
	object Mergedhavemediator { get; set; }
	object Mergedwontime_4007 { get; set; }
	object Mergedwontime { get; set; }
	object Mergedmediatortime_4008 { get; set; }
	object Mergedmediatortime { get; set; }
	object Adsalesdebugmsg_10001 { get; set; }
	object Adsalesdebugmsg { get; set; }
	object Adsalesfilename_10003 { get; set; }
	object Adsalesfilename { get; set; }
	object Mediatordebugmsg_10101 { get; set; }
	object Mediatordebugmsg { get; set; }
	object Mergediterationcounter_10200 { get; set; }
	object Mergediterationcounter { get; set; }
	object Mergeddebugmsg_10201 { get; set; }
	object Mergeddebugmsg { get; set; }
	object Mergedprocesstable_10202 { get; set; }
	object Mergedprocesstable { get; set; }
	object Wondebugmsg_10301 { get; set; }
	object Wondebugmsg { get; set; }
	object Wonfilename_10303 { get; set; }
	object Wonfilename { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public AdsalesQActionTable adsales { get; set; }
	/// <summary>PID: 2000</summary>
	public MediatorQActionTable mediator { get; set; }
	/// <summary>PID: 3000</summary>
	public WonQActionTable won { get; set; }
	/// <summary>PID: 4000</summary>
	public MergedtableQActionTable mergedtable { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: dummy</summary>
	public System.Object Triggerqaction_dummy {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration_4 {get { return GetParameter(4); }set { SetParameter(4, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration {get { return Write.Pgbconfiguration; }set { Write.Pgbconfiguration = value; }}
	/// <summary>PID: 5  | Type: fixed</summary>
	public System.Object Title_begin_urlconfig__fixed {get { return GetParameter(5); }set { SetParameter(5, value); }}
	/// <summary>PID: 6  | Type: fixed</summary>
	public System.Object Title_end_urlconfig__fixed {get { return GetParameter(6); }set { SetParameter(6, value); }}
	/// <summary>PID: 7  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnameadsales_7 {get { return GetParameter(7); }set { SetParameter(7, value); }}
	/// <summary>PID: 7  | Type: read</summary>
	public System.Object Channelnameadsales {get { return GetParameter(7); }set { SetParameter(7, value); }}
	/// <summary>PID: 8  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnameadsales_8 {get { return GetParameter(8); }set { SetParameter(8, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Urimediator_9 {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	public System.Object Urimediator {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 10  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Urimediator_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channenamemediator_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	public System.Object Channenamemediator {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 12  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channenamemediator_12 {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 13  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Maxresultsmediator_13 {get { return GetParameter(13); }set { SetParameter(13, value); }}
	/// <summary>PID: 13  | Type: read</summary>
	public System.Object Maxresultsmediator {get { return GetParameter(13); }set { SetParameter(13, value); }}
	/// <summary>PID: 14  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Maxresultsmediator_14 {get { return GetParameter(14); }set { SetParameter(14, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestime_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Adsalestime {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestitle_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Adsalestitle {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesreconcilekey_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Adsalesreconcilekey {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorid_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	public System.Object Mediatorid {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorreconcilekey_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Mediatorreconcilekey {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatortitle_2003 {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	public System.Object Mediatortitle {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordate_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	public System.Object Mediatordate {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 3001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonstartdate_3001 {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3001  | Type: read</summary>
	public System.Object Wonstartdate {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wontitle_3002 {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3002  | Type: read</summary>
	public System.Object Wontitle {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonreconcilekey_3003 {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 3003  | Type: read</summary>
	public System.Object Wonreconcilekey {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 4001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedreconcilekey_4001 {get { return GetParameter(4001); }set { SetParameter(4001, value); }}
	/// <summary>PID: 4001  | Type: read</summary>
	public System.Object Mergedreconcilekey {get { return GetParameter(4001); }set { SetParameter(4001, value); }}
	/// <summary>PID: 4002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedproductcode_4002 {get { return GetParameter(4002); }set { SetParameter(4002, value); }}
	/// <summary>PID: 4002  | Type: read</summary>
	public System.Object Mergedproductcode {get { return GetParameter(4002); }set { SetParameter(4002, value); }}
	/// <summary>PID: 4003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedadsalestime_4003 {get { return GetParameter(4003); }set { SetParameter(4003, value); }}
	/// <summary>PID: 4003  | Type: read</summary>
	public System.Object Mergedadsalestime {get { return GetParameter(4003); }set { SetParameter(4003, value); }}
	/// <summary>PID: 4004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedduration_4004 {get { return GetParameter(4004); }set { SetParameter(4004, value); }}
	/// <summary>PID: 4004  | Type: read</summary>
	public System.Object Mergedduration {get { return GetParameter(4004); }set { SetParameter(4004, value); }}
	/// <summary>PID: 4005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavewon_4005 {get { return GetParameter(4005); }set { SetParameter(4005, value); }}
	/// <summary>PID: 4005  | Type: read</summary>
	public System.Object Mergedhavewon {get { return GetParameter(4005); }set { SetParameter(4005, value); }}
	/// <summary>PID: 4006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavemediator_4006 {get { return GetParameter(4006); }set { SetParameter(4006, value); }}
	/// <summary>PID: 4006  | Type: read</summary>
	public System.Object Mergedhavemediator {get { return GetParameter(4006); }set { SetParameter(4006, value); }}
	/// <summary>PID: 4007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedwontime_4007 {get { return GetParameter(4007); }set { SetParameter(4007, value); }}
	/// <summary>PID: 4007  | Type: read</summary>
	public System.Object Mergedwontime {get { return GetParameter(4007); }set { SetParameter(4007, value); }}
	/// <summary>PID: 4008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedmediatortime_4008 {get { return GetParameter(4008); }set { SetParameter(4008, value); }}
	/// <summary>PID: 4008  | Type: read</summary>
	public System.Object Mergedmediatortime {get { return GetParameter(4008); }set { SetParameter(4008, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesdebugmsg_10001 {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	public System.Object Adsalesdebugmsg {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesfilename_10003 {get { return GetParameter(10003); }set { SetParameter(10003, value); }}
	/// <summary>PID: 10003  | Type: read</summary>
	public System.Object Adsalesfilename {get { return GetParameter(10003); }set { SetParameter(10003, value); }}
	/// <summary>PID: 10101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordebugmsg_10101 {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10101  | Type: read</summary>
	public System.Object Mediatordebugmsg {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10200  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergediterationcounter_10200 {get { return GetParameter(10200); }set { SetParameter(10200, value); }}
	/// <summary>PID: 10200  | Type: read</summary>
	public System.Object Mergediterationcounter {get { return GetParameter(10200); }set { SetParameter(10200, value); }}
	/// <summary>PID: 10201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergeddebugmsg_10201 {get { return GetParameter(10201); }set { SetParameter(10201, value); }}
	/// <summary>PID: 10201  | Type: read</summary>
	public System.Object Mergeddebugmsg {get { return GetParameter(10201); }set { SetParameter(10201, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable_10202 {get { return GetParameter(10202); }set { SetParameter(10202, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable {get { return Write.Mergedprocesstable; }set { Write.Mergedprocesstable = value; }}
	/// <summary>PID: 10301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wondebugmsg_10301 {get { return GetParameter(10301); }set { SetParameter(10301, value); }}
	/// <summary>PID: 10301  | Type: read</summary>
	public System.Object Wondebugmsg {get { return GetParameter(10301); }set { SetParameter(10301, value); }}
	/// <summary>PID: 10303  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonfilename_10303 {get { return GetParameter(10303); }set { SetParameter(10303, value); }}
	/// <summary>PID: 10303  | Type: read</summary>
	public System.Object Wonfilename {get { return GetParameter(10303); }set { SetParameter(10303, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		adsales = new AdsalesQActionTable(this, 1000, "adsales");
		mediator = new MediatorQActionTable(this, 2000, "mediator");
		won = new WonQActionTable(this, 3000, "won");
		mergedtable = new MergedtableQActionTable(this, 4000, "mergedtable");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class AdsalesQActionTable : QActionTable, IEnumerable<AdsalesQActionRow>
{
	public AdsalesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<AdsalesQActionRow> GetEnumerator() { return new QActionTableEnumerator<AdsalesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MediatorQActionTable : QActionTable, IEnumerable<MediatorQActionRow>
{
	public MediatorQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MediatorQActionRow> GetEnumerator() { return new QActionTableEnumerator<MediatorQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class WonQActionTable : QActionTable, IEnumerable<WonQActionRow>
{
	public WonQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<WonQActionRow> GetEnumerator() { return new QActionTableEnumerator<WonQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MergedtableQActionTable : QActionTable, IEnumerable<MergedtableQActionRow>
{
	public MergedtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MergedtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<MergedtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class AdsalesQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestime_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Adsalestime { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestitle_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Adsalestitle { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesreconcilekey_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Adsalesreconcilekey { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public AdsalesQActionRow() : base(0, 3) { }
	public AdsalesQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator AdsalesQActionRow(System.Object[] source) { return new AdsalesQActionRow(source); }
	public static implicit operator System.Object[](AdsalesQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MediatorQActionRow : QActionTableRow
{
	/// <summary>PID: 2001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorid_2001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2001 | Type: read</summary>
	public System.Object Mediatorid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorreconcilekey_2002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	public System.Object Mediatorreconcilekey { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatortitle_2003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	public System.Object Mediatortitle { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordate_2004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	public System.Object Mediatordate { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public MediatorQActionRow() : base(0, 4) { }
	public MediatorQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator MediatorQActionRow(System.Object[] source) { return new MediatorQActionRow(source); }
	public static implicit operator System.Object[](MediatorQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class WonQActionRow : QActionTableRow
{
	/// <summary>PID: 3001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonstartdate_3001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3001 | Type: read</summary>
	public System.Object Wonstartdate { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wontitle_3002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3002 | Type: read</summary>
	public System.Object Wontitle { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonreconcilekey_3003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3003 | Type: read</summary>
	public System.Object Wonreconcilekey { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public WonQActionRow() : base(0, 3) { }
	public WonQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator WonQActionRow(System.Object[] source) { return new WonQActionRow(source); }
	public static implicit operator System.Object[](WonQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MergedtableQActionRow : QActionTableRow
{
	/// <summary>PID: 4001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedreconcilekey_4001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 4001 | Type: read</summary>
	public System.Object Mergedreconcilekey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 4002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedproductcode_4002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 4002 | Type: read</summary>
	public System.Object Mergedproductcode { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 4003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedadsalestime_4003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 4003 | Type: read</summary>
	public System.Object Mergedadsalestime { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 4004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedduration_4004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 4004 | Type: read</summary>
	public System.Object Mergedduration { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 4005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavewon_4005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 4005 | Type: read</summary>
	public System.Object Mergedhavewon { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 4006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavemediator_4006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 4006 | Type: read</summary>
	public System.Object Mergedhavemediator { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 4007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedwontime_4007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 4007 | Type: read</summary>
	public System.Object Mergedwontime { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 4008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedmediatortime_4008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 4008 | Type: read</summary>
	public System.Object Mergedmediatortime { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public MergedtableQActionRow() : base(0, 8) { }
	public MergedtableQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator MergedtableQActionRow(System.Object[] source) { return new MergedtableQActionRow(source); }
	public static implicit operator System.Object[](MergedtableQActionRow source) { return source.ToObjectArray(); }
}
}
