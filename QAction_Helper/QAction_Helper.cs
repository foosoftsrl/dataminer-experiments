// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 7 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int channelname_7 = 7;
	/// <summary>PID: 7 | Type: read</summary>
	public const int channelname = 7;
	/// <summary>PID: 9 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int urimediator_9 = 9;
	/// <summary>PID: 9 | Type: read</summary>
	public const int urimediator = 9;
	/// <summary>PID: 13 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int maxresultsmediator_13 = 13;
	/// <summary>PID: 13 | Type: read</summary>
	public const int maxresultsmediator = 13;
	/// <summary>PID: 15 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int probeurl_15 = 15;
	/// <summary>PID: 15 | Type: read</summary>
	public const int probeurl = 15;
	/// <summary>PID: 17 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int probeserviceid_17 = 17;
	/// <summary>PID: 17 | Type: read</summary>
	public const int probeserviceid = 17;
	/// <summary>PID: 6100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int sctedebugmsg_6100 = 6100;
	/// <summary>PID: 6100 | Type: read</summary>
	public const int sctedebugmsg = 6100;
	/// <summary>PID: 10001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int adsalesdebugmsg_10001 = 10001;
	/// <summary>PID: 10001 | Type: read</summary>
	public const int adsalesdebugmsg = 10001;
	/// <summary>PID: 10101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mediatordebugmsg_10101 = 10101;
	/// <summary>PID: 10101 | Type: read</summary>
	public const int mediatordebugmsg = 10101;
	/// <summary>PID: 10200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mergediterationcounter_10200 = 10200;
	/// <summary>PID: 10200 | Type: read</summary>
	public const int mergediterationcounter = 10200;
	/// <summary>PID: 10201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mergeddebugmsg_10201 = 10201;
	/// <summary>PID: 10201 | Type: read</summary>
	public const int mergeddebugmsg = 10201;
	/// <summary>PID: 10301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int wondebugmsg_10301 = 10301;
	/// <summary>PID: 10301 | Type: read</summary>
	public const int wondebugmsg = 10301;
	/// <summary>PID: 10401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int legacydebugmsg_10401 = 10401;
	/// <summary>PID: 10401 | Type: read</summary>
	public const int legacydebugmsg = 10401;
	/// <summary>PID: 20000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdate0_20000 = 20000;
	/// <summary>PID: 20000 | Type: read</summary>
	public const int xprintdate0 = 20000;
	/// <summary>PID: 20001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdate1_20001 = 20001;
	/// <summary>PID: 20001 | Type: read</summary>
	public const int xprintdate1 = 20001;
	/// <summary>PID: 20002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdate2_20002 = 20002;
	/// <summary>PID: 20002 | Type: read</summary>
	public const int xprintdate2 = 20002;
	/// <summary>PID: 20100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdata0_20100 = 20100;
	/// <summary>PID: 20100 | Type: read</summary>
	public const int xprintdata0 = 20100;
	/// <summary>PID: 20101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdata1_20101 = 20101;
	/// <summary>PID: 20101 | Type: read</summary>
	public const int xprintdata1 = 20101;
	/// <summary>PID: 20102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintdata2_20102 = 20102;
	/// <summary>PID: 20102 | Type: read</summary>
	public const int xprintdata2 = 20102;
	/// <summary>PID: 20200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintalarm0_20200 = 20200;
	/// <summary>PID: 20200 | Type: read</summary>
	public const int xprintalarm0 = 20200;
	/// <summary>PID: 20201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintalarm1_20201 = 20201;
	/// <summary>PID: 20201 | Type: read</summary>
	public const int xprintalarm1 = 20201;
	/// <summary>PID: 20202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int xprintalarm2_20202 = 20202;
	/// <summary>PID: 20202 | Type: read</summary>
	public const int xprintalarm2 = 20202;
	public class Write
	{
		/// <summary>PID: 4 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pgbconfiguration_4 = 4;
		/// <summary>PID: 4 | Type: write</summary>
		public const int pgbconfiguration = 4;
		/// <summary>PID: 8 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int channelname_8 = 8;
		/// <summary>PID: 8 | Type: write</summary>
		public const int channelname = 8;
		/// <summary>PID: 10 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int urimediator_10 = 10;
		/// <summary>PID: 10 | Type: write</summary>
		public const int urimediator = 10;
		/// <summary>PID: 14 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int maxresultsmediator_14 = 14;
		/// <summary>PID: 14 | Type: write</summary>
		public const int maxresultsmediator = 14;
		/// <summary>PID: 16 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int probeurl_16 = 16;
		/// <summary>PID: 16 | Type: write</summary>
		public const int probeurl = 16;
		/// <summary>PID: 18 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int probeserviceid_18 = 18;
		/// <summary>PID: 18 | Type: write</summary>
		public const int probeserviceid = 18;
		/// <summary>PID: 10202 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mergedprocesstable_10202 = 10202;
		/// <summary>PID: 10202 | Type: write</summary>
		public const int mergedprocesstable = 10202;
	}
	public class Adsales
	{
		/// <summary>PID: 1000</summary>
		public const int tablePid = 1000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1001</summary>
		public const int indexColumnPid = 1001;
		public class Pid
		{
			/// <summary>PID: 1001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesreconcilekey_1001 = 1001;
			/// <summary>PID: 1001 | Type: read</summary>
			public const int adsalesreconcilekey = 1001;
			/// <summary>PID: 1002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestime_1002 = 1002;
			/// <summary>PID: 1002 | Type: read</summary>
			public const int adsalestime = 1002;
			/// <summary>PID: 1003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesbreakid_1003 = 1003;
			/// <summary>PID: 1003 | Type: read</summary>
			public const int adsalesbreakid = 1003;
			/// <summary>PID: 1004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestitle_1004 = 1004;
			/// <summary>PID: 1004 | Type: read</summary>
			public const int adsalestitle = 1004;
			/// <summary>PID: 1005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestype_1005 = 1005;
			/// <summary>PID: 1005 | Type: read</summary>
			public const int adsalestype = 1005;
			/// <summary>PID: 1006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesenabler_1006 = 1006;
			/// <summary>PID: 1006 | Type: read</summary>
			public const int adsalesenabler = 1006;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesreconcilekey_1001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int adsalesreconcilekey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestime_1002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int adsalestime = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesbreakid_1003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int adsalesbreakid = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestitle_1004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int adsalestitle = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalestype_1005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int adsalestype = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int adsalesenabler_1006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int adsalesenabler = 5;
		}
	}
	public class Mediator
	{
		/// <summary>PID: 2000</summary>
		public const int tablePid = 2000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 2001</summary>
		public const int indexColumnPid = 2001;
		public class Pid
		{
			/// <summary>PID: 2001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorid_2001 = 2001;
			/// <summary>PID: 2001 | Type: read</summary>
			public const int mediatorid = 2001;
			/// <summary>PID: 2002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatordate_2002 = 2002;
			/// <summary>PID: 2002 | Type: read</summary>
			public const int mediatordate = 2002;
			/// <summary>PID: 2003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatortitle_2003 = 2003;
			/// <summary>PID: 2003 | Type: read</summary>
			public const int mediatortitle = 2003;
			/// <summary>PID: 2004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorschedulereference_2004 = 2004;
			/// <summary>PID: 2004 | Type: read</summary>
			public const int mediatorschedulereference = 2004;
			/// <summary>PID: 2005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorreconcilekey_2005 = 2005;
			/// <summary>PID: 2005 | Type: read</summary>
			public const int mediatorreconcilekey = 2005;
			/// <summary>PID: 2006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorstatus_2006 = 2006;
			/// <summary>PID: 2006 | Type: read</summary>
			public const int mediatorstatus = 2006;
			/// <summary>PID: 2007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorenablerlegacy_2007 = 2007;
			/// <summary>PID: 2007 | Type: read</summary>
			public const int mediatorenablerlegacy = 2007;
			/// <summary>PID: 2008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorsctebreakstart_2008 = 2008;
			/// <summary>PID: 2008 | Type: read</summary>
			public const int mediatorsctebreakstart = 2008;
			/// <summary>PID: 2009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorscteadvstart_2009 = 2009;
			/// <summary>PID: 2009 | Type: read</summary>
			public const int mediatorscteadvstart = 2009;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorid_2001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mediatorid = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatordate_2002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int mediatordate = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatortitle_2003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int mediatortitle = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorschedulereference_2004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int mediatorschedulereference = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorreconcilekey_2005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int mediatorreconcilekey = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorstatus_2006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int mediatorstatus = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorenablerlegacy_2007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int mediatorenablerlegacy = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorsctebreakstart_2008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int mediatorsctebreakstart = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mediatorscteadvstart_2009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int mediatorscteadvstart = 8;
		}
	}
	public class Won
	{
		/// <summary>PID: 3000</summary>
		public const int tablePid = 3000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 3001</summary>
		public const int indexColumnPid = 3001;
		public class Pid
		{
			/// <summary>PID: 3001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonitemreference_3001 = 3001;
			/// <summary>PID: 3001 | Type: read</summary>
			public const int wonitemreference = 3001;
			/// <summary>PID: 3002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonstartdate_3002 = 3002;
			/// <summary>PID: 3002 | Type: read</summary>
			public const int wonstartdate = 3002;
			/// <summary>PID: 3003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wontitle_3003 = 3003;
			/// <summary>PID: 3003 | Type: read</summary>
			public const int wontitle = 3003;
			/// <summary>PID: 3004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonreconcilekey_3004 = 3004;
			/// <summary>PID: 3004 | Type: read</summary>
			public const int wonreconcilekey = 3004;
			/// <summary>PID: 3005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonenablerlegacy_3005 = 3005;
			/// <summary>PID: 3005 | Type: read</summary>
			public const int wonenablerlegacy = 3005;
			/// <summary>PID: 3006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonsctebreakstart_3006 = 3006;
			/// <summary>PID: 3006 | Type: read</summary>
			public const int wonsctebreakstart = 3006;
			/// <summary>PID: 3007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonscteadvstart_3007 = 3007;
			/// <summary>PID: 3007 | Type: read</summary>
			public const int wonscteadvstart = 3007;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonitemreference_3001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int wonitemreference = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonstartdate_3002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int wonstartdate = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wontitle_3003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int wontitle = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonreconcilekey_3004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int wonreconcilekey = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonenablerlegacy_3005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int wonenablerlegacy = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonsctebreakstart_3006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int wonsctebreakstart = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int wonscteadvstart_3007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int wonscteadvstart = 6;
		}
	}
	public class Mergedtable
	{
		/// <summary>PID: 4000</summary>
		public const int tablePid = 4000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 4001</summary>
		public const int indexColumnPid = 4001;
		public class Pid
		{
			/// <summary>PID: 4001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedreconcilekey_4001 = 4001;
			/// <summary>PID: 4001 | Type: read</summary>
			public const int mergedreconcilekey = 4001;
			/// <summary>PID: 4002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedadsalestime_4002 = 4002;
			/// <summary>PID: 4002 | Type: read</summary>
			public const int mergedadsalestime = 4002;
			/// <summary>PID: 4003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedproductcode_4003 = 4003;
			/// <summary>PID: 4003 | Type: read</summary>
			public const int mergedproductcode = 4003;
			/// <summary>PID: 4004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedduration_4004 = 4004;
			/// <summary>PID: 4004 | Type: read</summary>
			public const int mergedduration = 4004;
			/// <summary>PID: 4005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavewon_4005 = 4005;
			/// <summary>PID: 4005 | Type: read</summary>
			public const int mergedhavewon = 4005;
			/// <summary>PID: 4006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavemediator_4006 = 4006;
			/// <summary>PID: 4006 | Type: read</summary>
			public const int mergedhavemediator = 4006;
			/// <summary>PID: 4007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedwontime_4007 = 4007;
			/// <summary>PID: 4007 | Type: read</summary>
			public const int mergedwontime = 4007;
			/// <summary>PID: 4008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedmediatortime_4008 = 4008;
			/// <summary>PID: 4008 | Type: read</summary>
			public const int mergedmediatortime = 4008;
			/// <summary>PID: 4009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedtype_4009 = 4009;
			/// <summary>PID: 4009 | Type: read</summary>
			public const int mergedtype = 4009;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedreconcilekey_4001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mergedreconcilekey = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedadsalestime_4002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int mergedadsalestime = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedproductcode_4003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int mergedproductcode = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedduration_4004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int mergedduration = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavewon_4005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int mergedhavewon = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedhavemediator_4006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int mergedhavemediator = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedwontime_4007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int mergedwontime = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedmediatortime_4008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int mergedmediatortime = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mergedtype_4009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int mergedtype = 8;
		}
	}
	public class Enablerlegacy
	{
		/// <summary>PID: 5000</summary>
		public const int tablePid = 5000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 5001</summary>
		public const int indexColumnPid = 5001;
		public class Pid
		{
			/// <summary>PID: 5001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacytime_5001 = 5001;
			/// <summary>PID: 5001 | Type: read</summary>
			public const int enablerlegacytime = 5001;
			/// <summary>PID: 5002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacyeventcode_5002 = 5002;
			/// <summary>PID: 5002 | Type: read</summary>
			public const int enablerlegacyeventcode = 5002;
			/// <summary>PID: 5003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacyeventname_5003 = 5003;
			/// <summary>PID: 5003 | Type: read</summary>
			public const int enablerlegacyeventname = 5003;
			/// <summary>PID: 5004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacypayload_5004 = 5004;
			/// <summary>PID: 5004 | Type: read</summary>
			public const int enablerlegacypayload = 5004;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacytime_5001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int enablerlegacytime = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacyeventcode_5002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int enablerlegacyeventcode = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacyeventname_5003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int enablerlegacyeventname = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerlegacypayload_5004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int enablerlegacypayload = 3;
		}
	}
	public class Enablerscte
	{
		/// <summary>PID: 6000</summary>
		public const int tablePid = 6000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 6001</summary>
		public const int indexColumnPid = 6001;
		public class Pid
		{
			/// <summary>PID: 6001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablersctetime_6001 = 6001;
			/// <summary>PID: 6001 | Type: read</summary>
			public const int enablersctetime = 6001;
			/// <summary>PID: 6002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerscteeventcode_6002 = 6002;
			/// <summary>PID: 6002 | Type: read</summary>
			public const int enablerscteeventcode = 6002;
			/// <summary>PID: 6003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerscteeventname_6003 = 6003;
			/// <summary>PID: 6003 | Type: read</summary>
			public const int enablerscteeventname = 6003;
			/// <summary>PID: 6004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablersctepayload_6004 = 6004;
			/// <summary>PID: 6004 | Type: read</summary>
			public const int enablersctepayload = 6004;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablersctetime_6001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int enablersctetime = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerscteeventcode_6002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int enablerscteeventcode = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablerscteeventname_6003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int enablerscteeventname = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enablersctepayload_6004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int enablersctepayload = 3;
		}
	}
	public class Xprint
	{
		/// <summary>PID: 7000</summary>
		public const int tablePid = 7000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 7001</summary>
		public const int indexColumnPid = 7001;
		public class Pid
		{
			/// <summary>PID: 7001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintindex_7001 = 7001;
			/// <summary>PID: 7001 | Type: read</summary>
			public const int xprintindex = 7001;
			/// <summary>PID: 7002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintdate_7002 = 7002;
			/// <summary>PID: 7002 | Type: read</summary>
			public const int xprintdate = 7002;
			/// <summary>PID: 7003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintadsales_7003 = 7003;
			/// <summary>PID: 7003 | Type: read</summary>
			public const int xprintadsales = 7003;
			/// <summary>PID: 7004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintwhatson_7004 = 7004;
			/// <summary>PID: 7004 | Type: read</summary>
			public const int xprintwhatson = 7004;
			/// <summary>PID: 7005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintmediator_7005 = 7005;
			/// <summary>PID: 7005 | Type: read</summary>
			public const int xprintmediator = 7005;
			/// <summary>PID: 7006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprinterrors_7006 = 7006;
			/// <summary>PID: 7006 | Type: read</summary>
			public const int xprinterrors = 7006;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintindex_7001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int xprintindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintdate_7002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int xprintdate = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintadsales_7003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int xprintadsales = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintwhatson_7004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int xprintwhatson = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprintmediator_7005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int xprintmediator = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int xprinterrors_7006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int xprinterrors = 5;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration {get { return Protocol.GetParameter(4); }set { Protocol.SetParameter(4, value); }}
	/// <summary>PID: 8  | Type: write</summary>
	public System.Object Channelname {get { return Protocol.GetParameter(8); }set { Protocol.SetParameter(8, value); }}
	/// <summary>PID: 10  | Type: write</summary>
	public System.Object Urimediator {get { return Protocol.GetParameter(10); }set { Protocol.SetParameter(10, value); }}
	/// <summary>PID: 14  | Type: write</summary>
	public System.Object Maxresultsmediator {get { return Protocol.GetParameter(14); }set { Protocol.SetParameter(14, value); }}
	/// <summary>PID: 16  | Type: write</summary>
	public System.Object Probeurl {get { return Protocol.GetParameter(16); }set { Protocol.SetParameter(16, value); }}
	/// <summary>PID: 18  | Type: write</summary>
	public System.Object Probeserviceid {get { return Protocol.GetParameter(18); }set { Protocol.SetParameter(18, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable {get { return Protocol.GetParameter(10202); }set { Protocol.SetParameter(10202, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 1000</summary>
	AdsalesQActionTable adsales { get; set; }
	/// <summary>PID: 2000</summary>
	MediatorQActionTable mediator { get; set; }
	/// <summary>PID: 3000</summary>
	WonQActionTable won { get; set; }
	/// <summary>PID: 4000</summary>
	MergedtableQActionTable mergedtable { get; set; }
	/// <summary>PID: 5000</summary>
	EnablerlegacyQActionTable enablerlegacy { get; set; }
	/// <summary>PID: 6000</summary>
	EnablerscteQActionTable enablerscte { get; set; }
	/// <summary>PID: 7000</summary>
	XprintQActionTable xprint { get; set; }
	object Afterstartup_dummy { get; set; }
	object Triggerqaction_dummy { get; set; }
	object Pgbconfiguration_4 { get; set; }
	object Pgbconfiguration { get; set; }
	object Title_begin_urlconfig__fixed { get; set; }
	object Title_end_urlconfig__fixed { get; set; }
	object Channelname_7 { get; set; }
	object Channelname { get; set; }
	object Channelname_8 { get; set; }
	object Urimediator_9 { get; set; }
	object Urimediator { get; set; }
	object Urimediator_10 { get; set; }
	object Maxresultsmediator_13 { get; set; }
	object Maxresultsmediator { get; set; }
	object Maxresultsmediator_14 { get; set; }
	object Probeurl_15 { get; set; }
	object Probeurl { get; set; }
	object Probeurl_16 { get; set; }
	object Probeserviceid_17 { get; set; }
	object Probeserviceid { get; set; }
	object Probeserviceid_18 { get; set; }
	object Adsalesreconcilekey_1001 { get; set; }
	object Adsalesreconcilekey { get; set; }
	object Adsalestime_1002 { get; set; }
	object Adsalestime { get; set; }
	object Adsalesbreakid_1003 { get; set; }
	object Adsalesbreakid { get; set; }
	object Adsalestitle_1004 { get; set; }
	object Adsalestitle { get; set; }
	object Adsalestype_1005 { get; set; }
	object Adsalestype { get; set; }
	object Adsalesenabler_1006 { get; set; }
	object Adsalesenabler { get; set; }
	object Mediatorid_2001 { get; set; }
	object Mediatorid { get; set; }
	object Mediatordate_2002 { get; set; }
	object Mediatordate { get; set; }
	object Mediatortitle_2003 { get; set; }
	object Mediatortitle { get; set; }
	object Mediatorschedulereference_2004 { get; set; }
	object Mediatorschedulereference { get; set; }
	object Mediatorreconcilekey_2005 { get; set; }
	object Mediatorreconcilekey { get; set; }
	object Mediatorstatus_2006 { get; set; }
	object Mediatorstatus { get; set; }
	object Mediatorenablerlegacy_2007 { get; set; }
	object Mediatorenablerlegacy { get; set; }
	object Mediatorsctebreakstart_2008 { get; set; }
	object Mediatorsctebreakstart { get; set; }
	object Mediatorscteadvstart_2009 { get; set; }
	object Mediatorscteadvstart { get; set; }
	object Wonitemreference_3001 { get; set; }
	object Wonitemreference { get; set; }
	object Wonstartdate_3002 { get; set; }
	object Wonstartdate { get; set; }
	object Wontitle_3003 { get; set; }
	object Wontitle { get; set; }
	object Wonreconcilekey_3004 { get; set; }
	object Wonreconcilekey { get; set; }
	object Wonenablerlegacy_3005 { get; set; }
	object Wonenablerlegacy { get; set; }
	object Wonsctebreakstart_3006 { get; set; }
	object Wonsctebreakstart { get; set; }
	object Wonscteadvstart_3007 { get; set; }
	object Wonscteadvstart { get; set; }
	object Mergedreconcilekey_4001 { get; set; }
	object Mergedreconcilekey { get; set; }
	object Mergedadsalestime_4002 { get; set; }
	object Mergedadsalestime { get; set; }
	object Mergedproductcode_4003 { get; set; }
	object Mergedproductcode { get; set; }
	object Mergedduration_4004 { get; set; }
	object Mergedduration { get; set; }
	object Mergedhavewon_4005 { get; set; }
	object Mergedhavewon { get; set; }
	object Mergedhavemediator_4006 { get; set; }
	object Mergedhavemediator { get; set; }
	object Mergedwontime_4007 { get; set; }
	object Mergedwontime { get; set; }
	object Mergedmediatortime_4008 { get; set; }
	object Mergedmediatortime { get; set; }
	object Mergedtype_4009 { get; set; }
	object Mergedtype { get; set; }
	object Enablerlegacytime_5001 { get; set; }
	object Enablerlegacytime { get; set; }
	object Enablerlegacyeventcode_5002 { get; set; }
	object Enablerlegacyeventcode { get; set; }
	object Enablerlegacyeventname_5003 { get; set; }
	object Enablerlegacyeventname { get; set; }
	object Enablerlegacypayload_5004 { get; set; }
	object Enablerlegacypayload { get; set; }
	object Enablersctetime_6001 { get; set; }
	object Enablersctetime { get; set; }
	object Enablerscteeventcode_6002 { get; set; }
	object Enablerscteeventcode { get; set; }
	object Enablerscteeventname_6003 { get; set; }
	object Enablerscteeventname { get; set; }
	object Enablersctepayload_6004 { get; set; }
	object Enablersctepayload { get; set; }
	object Sctedebugmsg_6100 { get; set; }
	object Sctedebugmsg { get; set; }
	object Xprintindex_7001 { get; set; }
	object Xprintindex { get; set; }
	object Xprintdate_7002 { get; set; }
	object Xprintdate { get; set; }
	object Xprintadsales_7003 { get; set; }
	object Xprintadsales { get; set; }
	object Xprintwhatson_7004 { get; set; }
	object Xprintwhatson { get; set; }
	object Xprintmediator_7005 { get; set; }
	object Xprintmediator { get; set; }
	object Xprinterrors_7006 { get; set; }
	object Xprinterrors { get; set; }
	object Adsalesdebugmsg_10001 { get; set; }
	object Adsalesdebugmsg { get; set; }
	object Mediatordebugmsg_10101 { get; set; }
	object Mediatordebugmsg { get; set; }
	object Mergediterationcounter_10200 { get; set; }
	object Mergediterationcounter { get; set; }
	object Mergeddebugmsg_10201 { get; set; }
	object Mergeddebugmsg { get; set; }
	object Mergedprocesstable_10202 { get; set; }
	object Mergedprocesstable { get; set; }
	object Wondebugmsg_10301 { get; set; }
	object Wondebugmsg { get; set; }
	object Legacydebugmsg_10401 { get; set; }
	object Legacydebugmsg { get; set; }
	object Xprintdate0_20000 { get; set; }
	object Xprintdate0 { get; set; }
	object Xprintdate1_20001 { get; set; }
	object Xprintdate1 { get; set; }
	object Xprintdate2_20002 { get; set; }
	object Xprintdate2 { get; set; }
	object Xprintdata0_20100 { get; set; }
	object Xprintdata0 { get; set; }
	object Xprintdata1_20101 { get; set; }
	object Xprintdata1 { get; set; }
	object Xprintdata2_20102 { get; set; }
	object Xprintdata2 { get; set; }
	object Xprintalarm0_20200 { get; set; }
	object Xprintalarm0 { get; set; }
	object Xprintalarm1_20201 { get; set; }
	object Xprintalarm1 { get; set; }
	object Xprintalarm2_20202 { get; set; }
	object Xprintalarm2 { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 1000</summary>
	public AdsalesQActionTable adsales { get; set; }
	/// <summary>PID: 2000</summary>
	public MediatorQActionTable mediator { get; set; }
	/// <summary>PID: 3000</summary>
	public WonQActionTable won { get; set; }
	/// <summary>PID: 4000</summary>
	public MergedtableQActionTable mergedtable { get; set; }
	/// <summary>PID: 5000</summary>
	public EnablerlegacyQActionTable enablerlegacy { get; set; }
	/// <summary>PID: 6000</summary>
	public EnablerscteQActionTable enablerscte { get; set; }
	/// <summary>PID: 7000</summary>
	public XprintQActionTable xprint { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: dummy</summary>
	public System.Object Triggerqaction_dummy {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration_4 {get { return GetParameter(4); }set { SetParameter(4, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Configuration... = Configuration</summary>
	public System.Object Pgbconfiguration {get { return Write.Pgbconfiguration; }set { Write.Pgbconfiguration = value; }}
	/// <summary>PID: 5  | Type: fixed</summary>
	public System.Object Title_begin_urlconfig__fixed {get { return GetParameter(5); }set { SetParameter(5, value); }}
	/// <summary>PID: 6  | Type: fixed</summary>
	public System.Object Title_end_urlconfig__fixed {get { return GetParameter(6); }set { SetParameter(6, value); }}
	/// <summary>PID: 7  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelname_7 {get { return GetParameter(7); }set { SetParameter(7, value); }}
	/// <summary>PID: 7  | Type: read</summary>
	public System.Object Channelname {get { return GetParameter(7); }set { SetParameter(7, value); }}
	/// <summary>PID: 8  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelname_8 {get { return GetParameter(8); }set { SetParameter(8, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Urimediator_9 {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 9  | Type: read</summary>
	public System.Object Urimediator {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 10  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Urimediator_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 13  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Maxresultsmediator_13 {get { return GetParameter(13); }set { SetParameter(13, value); }}
	/// <summary>PID: 13  | Type: read</summary>
	public System.Object Maxresultsmediator {get { return GetParameter(13); }set { SetParameter(13, value); }}
	/// <summary>PID: 14  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Maxresultsmediator_14 {get { return GetParameter(14); }set { SetParameter(14, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Probeurl_15 {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	public System.Object Probeurl {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 16  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Probeurl_16 {get { return GetParameter(16); }set { SetParameter(16, value); }}
	/// <summary>PID: 17  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Probeserviceid_17 {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 17  | Type: read</summary>
	public System.Object Probeserviceid {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 18  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Probeserviceid_18 {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesreconcilekey_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read</summary>
	public System.Object Adsalesreconcilekey {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestime_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read</summary>
	public System.Object Adsalestime {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesbreakid_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Adsalesbreakid {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestitle_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Adsalestitle {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestype_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read</summary>
	public System.Object Adsalestype {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesenabler_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read</summary>
	public System.Object Adsalesenabler {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorid_2001 {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2001  | Type: read</summary>
	public System.Object Mediatorid {get { return GetParameter(2001); }set { SetParameter(2001, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordate_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Mediatordate {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatortitle_2003 {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	public System.Object Mediatortitle {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorschedulereference_2004 {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2004  | Type: read</summary>
	public System.Object Mediatorschedulereference {get { return GetParameter(2004); }set { SetParameter(2004, value); }}
	/// <summary>PID: 2005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorreconcilekey_2005 {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2005  | Type: read</summary>
	public System.Object Mediatorreconcilekey {get { return GetParameter(2005); }set { SetParameter(2005, value); }}
	/// <summary>PID: 2006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorstatus_2006 {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2006  | Type: read</summary>
	public System.Object Mediatorstatus {get { return GetParameter(2006); }set { SetParameter(2006, value); }}
	/// <summary>PID: 2007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorenablerlegacy_2007 {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2007  | Type: read</summary>
	public System.Object Mediatorenablerlegacy {get { return GetParameter(2007); }set { SetParameter(2007, value); }}
	/// <summary>PID: 2008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorsctebreakstart_2008 {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2008  | Type: read</summary>
	public System.Object Mediatorsctebreakstart {get { return GetParameter(2008); }set { SetParameter(2008, value); }}
	/// <summary>PID: 2009  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorscteadvstart_2009 {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 2009  | Type: read</summary>
	public System.Object Mediatorscteadvstart {get { return GetParameter(2009); }set { SetParameter(2009, value); }}
	/// <summary>PID: 3001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonitemreference_3001 {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3001  | Type: read</summary>
	public System.Object Wonitemreference {get { return GetParameter(3001); }set { SetParameter(3001, value); }}
	/// <summary>PID: 3002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonstartdate_3002 {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3002  | Type: read</summary>
	public System.Object Wonstartdate {get { return GetParameter(3002); }set { SetParameter(3002, value); }}
	/// <summary>PID: 3003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wontitle_3003 {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 3003  | Type: read</summary>
	public System.Object Wontitle {get { return GetParameter(3003); }set { SetParameter(3003, value); }}
	/// <summary>PID: 3004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonreconcilekey_3004 {get { return GetParameter(3004); }set { SetParameter(3004, value); }}
	/// <summary>PID: 3004  | Type: read</summary>
	public System.Object Wonreconcilekey {get { return GetParameter(3004); }set { SetParameter(3004, value); }}
	/// <summary>PID: 3005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonenablerlegacy_3005 {get { return GetParameter(3005); }set { SetParameter(3005, value); }}
	/// <summary>PID: 3005  | Type: read</summary>
	public System.Object Wonenablerlegacy {get { return GetParameter(3005); }set { SetParameter(3005, value); }}
	/// <summary>PID: 3006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonsctebreakstart_3006 {get { return GetParameter(3006); }set { SetParameter(3006, value); }}
	/// <summary>PID: 3006  | Type: read</summary>
	public System.Object Wonsctebreakstart {get { return GetParameter(3006); }set { SetParameter(3006, value); }}
	/// <summary>PID: 3007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonscteadvstart_3007 {get { return GetParameter(3007); }set { SetParameter(3007, value); }}
	/// <summary>PID: 3007  | Type: read</summary>
	public System.Object Wonscteadvstart {get { return GetParameter(3007); }set { SetParameter(3007, value); }}
	/// <summary>PID: 4001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedreconcilekey_4001 {get { return GetParameter(4001); }set { SetParameter(4001, value); }}
	/// <summary>PID: 4001  | Type: read</summary>
	public System.Object Mergedreconcilekey {get { return GetParameter(4001); }set { SetParameter(4001, value); }}
	/// <summary>PID: 4002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedadsalestime_4002 {get { return GetParameter(4002); }set { SetParameter(4002, value); }}
	/// <summary>PID: 4002  | Type: read</summary>
	public System.Object Mergedadsalestime {get { return GetParameter(4002); }set { SetParameter(4002, value); }}
	/// <summary>PID: 4003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedproductcode_4003 {get { return GetParameter(4003); }set { SetParameter(4003, value); }}
	/// <summary>PID: 4003  | Type: read</summary>
	public System.Object Mergedproductcode {get { return GetParameter(4003); }set { SetParameter(4003, value); }}
	/// <summary>PID: 4004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedduration_4004 {get { return GetParameter(4004); }set { SetParameter(4004, value); }}
	/// <summary>PID: 4004  | Type: read</summary>
	public System.Object Mergedduration {get { return GetParameter(4004); }set { SetParameter(4004, value); }}
	/// <summary>PID: 4005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavewon_4005 {get { return GetParameter(4005); }set { SetParameter(4005, value); }}
	/// <summary>PID: 4005  | Type: read</summary>
	public System.Object Mergedhavewon {get { return GetParameter(4005); }set { SetParameter(4005, value); }}
	/// <summary>PID: 4006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavemediator_4006 {get { return GetParameter(4006); }set { SetParameter(4006, value); }}
	/// <summary>PID: 4006  | Type: read</summary>
	public System.Object Mergedhavemediator {get { return GetParameter(4006); }set { SetParameter(4006, value); }}
	/// <summary>PID: 4007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedwontime_4007 {get { return GetParameter(4007); }set { SetParameter(4007, value); }}
	/// <summary>PID: 4007  | Type: read</summary>
	public System.Object Mergedwontime {get { return GetParameter(4007); }set { SetParameter(4007, value); }}
	/// <summary>PID: 4008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedmediatortime_4008 {get { return GetParameter(4008); }set { SetParameter(4008, value); }}
	/// <summary>PID: 4008  | Type: read</summary>
	public System.Object Mergedmediatortime {get { return GetParameter(4008); }set { SetParameter(4008, value); }}
	/// <summary>PID: 4009  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedtype_4009 {get { return GetParameter(4009); }set { SetParameter(4009, value); }}
	/// <summary>PID: 4009  | Type: read</summary>
	public System.Object Mergedtype {get { return GetParameter(4009); }set { SetParameter(4009, value); }}
	/// <summary>PID: 5001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacytime_5001 {get { return GetParameter(5001); }set { SetParameter(5001, value); }}
	/// <summary>PID: 5001  | Type: read</summary>
	public System.Object Enablerlegacytime {get { return GetParameter(5001); }set { SetParameter(5001, value); }}
	/// <summary>PID: 5002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacyeventcode_5002 {get { return GetParameter(5002); }set { SetParameter(5002, value); }}
	/// <summary>PID: 5002  | Type: read</summary>
	public System.Object Enablerlegacyeventcode {get { return GetParameter(5002); }set { SetParameter(5002, value); }}
	/// <summary>PID: 5003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacyeventname_5003 {get { return GetParameter(5003); }set { SetParameter(5003, value); }}
	/// <summary>PID: 5003  | Type: read</summary>
	public System.Object Enablerlegacyeventname {get { return GetParameter(5003); }set { SetParameter(5003, value); }}
	/// <summary>PID: 5004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacypayload_5004 {get { return GetParameter(5004); }set { SetParameter(5004, value); }}
	/// <summary>PID: 5004  | Type: read</summary>
	public System.Object Enablerlegacypayload {get { return GetParameter(5004); }set { SetParameter(5004, value); }}
	/// <summary>PID: 6001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablersctetime_6001 {get { return GetParameter(6001); }set { SetParameter(6001, value); }}
	/// <summary>PID: 6001  | Type: read</summary>
	public System.Object Enablersctetime {get { return GetParameter(6001); }set { SetParameter(6001, value); }}
	/// <summary>PID: 6002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerscteeventcode_6002 {get { return GetParameter(6002); }set { SetParameter(6002, value); }}
	/// <summary>PID: 6002  | Type: read</summary>
	public System.Object Enablerscteeventcode {get { return GetParameter(6002); }set { SetParameter(6002, value); }}
	/// <summary>PID: 6003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerscteeventname_6003 {get { return GetParameter(6003); }set { SetParameter(6003, value); }}
	/// <summary>PID: 6003  | Type: read</summary>
	public System.Object Enablerscteeventname {get { return GetParameter(6003); }set { SetParameter(6003, value); }}
	/// <summary>PID: 6004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablersctepayload_6004 {get { return GetParameter(6004); }set { SetParameter(6004, value); }}
	/// <summary>PID: 6004  | Type: read</summary>
	public System.Object Enablersctepayload {get { return GetParameter(6004); }set { SetParameter(6004, value); }}
	/// <summary>PID: 6100  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Sctedebugmsg_6100 {get { return GetParameter(6100); }set { SetParameter(6100, value); }}
	/// <summary>PID: 6100  | Type: read</summary>
	public System.Object Sctedebugmsg {get { return GetParameter(6100); }set { SetParameter(6100, value); }}
	/// <summary>PID: 7001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintindex_7001 {get { return GetParameter(7001); }set { SetParameter(7001, value); }}
	/// <summary>PID: 7001  | Type: read</summary>
	public System.Object Xprintindex {get { return GetParameter(7001); }set { SetParameter(7001, value); }}
	/// <summary>PID: 7002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdate_7002 {get { return GetParameter(7002); }set { SetParameter(7002, value); }}
	/// <summary>PID: 7002  | Type: read</summary>
	public System.Object Xprintdate {get { return GetParameter(7002); }set { SetParameter(7002, value); }}
	/// <summary>PID: 7003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintadsales_7003 {get { return GetParameter(7003); }set { SetParameter(7003, value); }}
	/// <summary>PID: 7003  | Type: read</summary>
	public System.Object Xprintadsales {get { return GetParameter(7003); }set { SetParameter(7003, value); }}
	/// <summary>PID: 7004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintwhatson_7004 {get { return GetParameter(7004); }set { SetParameter(7004, value); }}
	/// <summary>PID: 7004  | Type: read</summary>
	public System.Object Xprintwhatson {get { return GetParameter(7004); }set { SetParameter(7004, value); }}
	/// <summary>PID: 7005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintmediator_7005 {get { return GetParameter(7005); }set { SetParameter(7005, value); }}
	/// <summary>PID: 7005  | Type: read</summary>
	public System.Object Xprintmediator {get { return GetParameter(7005); }set { SetParameter(7005, value); }}
	/// <summary>PID: 7006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprinterrors_7006 {get { return GetParameter(7006); }set { SetParameter(7006, value); }}
	/// <summary>PID: 7006  | Type: read</summary>
	public System.Object Xprinterrors {get { return GetParameter(7006); }set { SetParameter(7006, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesdebugmsg_10001 {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	public System.Object Adsalesdebugmsg {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordebugmsg_10101 {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10101  | Type: read</summary>
	public System.Object Mediatordebugmsg {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10200  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergediterationcounter_10200 {get { return GetParameter(10200); }set { SetParameter(10200, value); }}
	/// <summary>PID: 10200  | Type: read</summary>
	public System.Object Mergediterationcounter {get { return GetParameter(10200); }set { SetParameter(10200, value); }}
	/// <summary>PID: 10201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergeddebugmsg_10201 {get { return GetParameter(10201); }set { SetParameter(10201, value); }}
	/// <summary>PID: 10201  | Type: read</summary>
	public System.Object Mergeddebugmsg {get { return GetParameter(10201); }set { SetParameter(10201, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable_10202 {get { return GetParameter(10202); }set { SetParameter(10202, value); }}
	/// <summary>PID: 10202  | Type: write | DISCREETS: Merge Tables = check</summary>
	public System.Object Mergedprocesstable {get { return Write.Mergedprocesstable; }set { Write.Mergedprocesstable = value; }}
	/// <summary>PID: 10301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wondebugmsg_10301 {get { return GetParameter(10301); }set { SetParameter(10301, value); }}
	/// <summary>PID: 10301  | Type: read</summary>
	public System.Object Wondebugmsg {get { return GetParameter(10301); }set { SetParameter(10301, value); }}
	/// <summary>PID: 10401  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Legacydebugmsg_10401 {get { return GetParameter(10401); }set { SetParameter(10401, value); }}
	/// <summary>PID: 10401  | Type: read</summary>
	public System.Object Legacydebugmsg {get { return GetParameter(10401); }set { SetParameter(10401, value); }}
	/// <summary>PID: 20000  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdate0_20000 {get { return GetParameter(20000); }set { SetParameter(20000, value); }}
	/// <summary>PID: 20000  | Type: read</summary>
	public System.Object Xprintdate0 {get { return GetParameter(20000); }set { SetParameter(20000, value); }}
	/// <summary>PID: 20001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdate1_20001 {get { return GetParameter(20001); }set { SetParameter(20001, value); }}
	/// <summary>PID: 20001  | Type: read</summary>
	public System.Object Xprintdate1 {get { return GetParameter(20001); }set { SetParameter(20001, value); }}
	/// <summary>PID: 20002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdate2_20002 {get { return GetParameter(20002); }set { SetParameter(20002, value); }}
	/// <summary>PID: 20002  | Type: read</summary>
	public System.Object Xprintdate2 {get { return GetParameter(20002); }set { SetParameter(20002, value); }}
	/// <summary>PID: 20100  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdata0_20100 {get { return GetParameter(20100); }set { SetParameter(20100, value); }}
	/// <summary>PID: 20100  | Type: read</summary>
	public System.Object Xprintdata0 {get { return GetParameter(20100); }set { SetParameter(20100, value); }}
	/// <summary>PID: 20101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdata1_20101 {get { return GetParameter(20101); }set { SetParameter(20101, value); }}
	/// <summary>PID: 20101  | Type: read</summary>
	public System.Object Xprintdata1 {get { return GetParameter(20101); }set { SetParameter(20101, value); }}
	/// <summary>PID: 20102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdata2_20102 {get { return GetParameter(20102); }set { SetParameter(20102, value); }}
	/// <summary>PID: 20102  | Type: read</summary>
	public System.Object Xprintdata2 {get { return GetParameter(20102); }set { SetParameter(20102, value); }}
	/// <summary>PID: 20200  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintalarm0_20200 {get { return GetParameter(20200); }set { SetParameter(20200, value); }}
	/// <summary>PID: 20200  | Type: read</summary>
	public System.Object Xprintalarm0 {get { return GetParameter(20200); }set { SetParameter(20200, value); }}
	/// <summary>PID: 20201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintalarm1_20201 {get { return GetParameter(20201); }set { SetParameter(20201, value); }}
	/// <summary>PID: 20201  | Type: read</summary>
	public System.Object Xprintalarm1 {get { return GetParameter(20201); }set { SetParameter(20201, value); }}
	/// <summary>PID: 20202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintalarm2_20202 {get { return GetParameter(20202); }set { SetParameter(20202, value); }}
	/// <summary>PID: 20202  | Type: read</summary>
	public System.Object Xprintalarm2 {get { return GetParameter(20202); }set { SetParameter(20202, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		adsales = new AdsalesQActionTable(this, 1000, "adsales");
		mediator = new MediatorQActionTable(this, 2000, "mediator");
		won = new WonQActionTable(this, 3000, "won");
		mergedtable = new MergedtableQActionTable(this, 4000, "mergedtable");
		enablerlegacy = new EnablerlegacyQActionTable(this, 5000, "enablerlegacy");
		enablerscte = new EnablerscteQActionTable(this, 6000, "enablerscte");
		xprint = new XprintQActionTable(this, 7000, "xprint");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class AdsalesQActionTable : QActionTable, IEnumerable<AdsalesQActionRow>
{
	public AdsalesQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<AdsalesQActionRow> GetEnumerator() { return new QActionTableEnumerator<AdsalesQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MediatorQActionTable : QActionTable, IEnumerable<MediatorQActionRow>
{
	public MediatorQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MediatorQActionRow> GetEnumerator() { return new QActionTableEnumerator<MediatorQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class WonQActionTable : QActionTable, IEnumerable<WonQActionRow>
{
	public WonQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<WonQActionRow> GetEnumerator() { return new QActionTableEnumerator<WonQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MergedtableQActionTable : QActionTable, IEnumerable<MergedtableQActionRow>
{
	public MergedtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MergedtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<MergedtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class EnablerlegacyQActionTable : QActionTable, IEnumerable<EnablerlegacyQActionRow>
{
	public EnablerlegacyQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<EnablerlegacyQActionRow> GetEnumerator() { return new QActionTableEnumerator<EnablerlegacyQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class EnablerscteQActionTable : QActionTable, IEnumerable<EnablerscteQActionRow>
{
	public EnablerscteQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<EnablerscteQActionRow> GetEnumerator() { return new QActionTableEnumerator<EnablerscteQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class XprintQActionTable : QActionTable, IEnumerable<XprintQActionRow>
{
	public XprintQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<XprintQActionRow> GetEnumerator() { return new QActionTableEnumerator<XprintQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class AdsalesQActionRow : QActionTableRow
{
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesreconcilekey_1001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1001 | Type: read</summary>
	public System.Object Adsalesreconcilekey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestime_1002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1002 | Type: read</summary>
	public System.Object Adsalestime { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesbreakid_1003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1003 | Type: read</summary>
	public System.Object Adsalesbreakid { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestitle_1004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1004 | Type: read</summary>
	public System.Object Adsalestitle { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalestype_1005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1005 | Type: read</summary>
	public System.Object Adsalestype { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Adsalesenabler_1006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1006 | Type: read</summary>
	public System.Object Adsalesenabler { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public AdsalesQActionRow() : base(0, 6) { }
	public AdsalesQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator AdsalesQActionRow(System.Object[] source) { return new AdsalesQActionRow(source); }
	public static implicit operator System.Object[](AdsalesQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MediatorQActionRow : QActionTableRow
{
	/// <summary>PID: 2001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorid_2001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2001 | Type: read</summary>
	public System.Object Mediatorid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatordate_2002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2002 | Type: read</summary>
	public System.Object Mediatordate { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatortitle_2003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2003 | Type: read</summary>
	public System.Object Mediatortitle { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorschedulereference_2004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2004 | Type: read</summary>
	public System.Object Mediatorschedulereference { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorreconcilekey_2005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2005 | Type: read</summary>
	public System.Object Mediatorreconcilekey { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorstatus_2006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2006 | Type: read</summary>
	public System.Object Mediatorstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorenablerlegacy_2007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2007 | Type: read</summary>
	public System.Object Mediatorenablerlegacy { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorsctebreakstart_2008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2008 | Type: read</summary>
	public System.Object Mediatorsctebreakstart { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mediatorscteadvstart_2009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 2009 | Type: read</summary>
	public System.Object Mediatorscteadvstart { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public MediatorQActionRow() : base(0, 9) { }
	public MediatorQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator MediatorQActionRow(System.Object[] source) { return new MediatorQActionRow(source); }
	public static implicit operator System.Object[](MediatorQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class WonQActionRow : QActionTableRow
{
	/// <summary>PID: 3001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonitemreference_3001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3001 | Type: read</summary>
	public System.Object Wonitemreference { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 3002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonstartdate_3002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3002 | Type: read</summary>
	public System.Object Wonstartdate { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 3003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wontitle_3003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3003 | Type: read</summary>
	public System.Object Wontitle { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 3004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonreconcilekey_3004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3004 | Type: read</summary>
	public System.Object Wonreconcilekey { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 3005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonenablerlegacy_3005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3005 | Type: read</summary>
	public System.Object Wonenablerlegacy { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 3006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonsctebreakstart_3006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3006 | Type: read</summary>
	public System.Object Wonsctebreakstart { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 3007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wonscteadvstart_3007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 3007 | Type: read</summary>
	public System.Object Wonscteadvstart { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public WonQActionRow() : base(0, 7) { }
	public WonQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator WonQActionRow(System.Object[] source) { return new WonQActionRow(source); }
	public static implicit operator System.Object[](WonQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MergedtableQActionRow : QActionTableRow
{
	/// <summary>PID: 4001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedreconcilekey_4001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 4001 | Type: read</summary>
	public System.Object Mergedreconcilekey { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 4002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedadsalestime_4002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 4002 | Type: read</summary>
	public System.Object Mergedadsalestime { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 4003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedproductcode_4003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 4003 | Type: read</summary>
	public System.Object Mergedproductcode { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 4004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedduration_4004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 4004 | Type: read</summary>
	public System.Object Mergedduration { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 4005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavewon_4005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 4005 | Type: read</summary>
	public System.Object Mergedhavewon { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 4006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedhavemediator_4006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 4006 | Type: read</summary>
	public System.Object Mergedhavemediator { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 4007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedwontime_4007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 4007 | Type: read</summary>
	public System.Object Mergedwontime { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 4008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedmediatortime_4008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 4008 | Type: read</summary>
	public System.Object Mergedmediatortime { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 4009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mergedtype_4009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 4009 | Type: read</summary>
	public System.Object Mergedtype { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public MergedtableQActionRow() : base(0, 9) { }
	public MergedtableQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator MergedtableQActionRow(System.Object[] source) { return new MergedtableQActionRow(source); }
	public static implicit operator System.Object[](MergedtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class EnablerlegacyQActionRow : QActionTableRow
{
	/// <summary>PID: 5001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacytime_5001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 5001 | Type: read</summary>
	public System.Object Enablerlegacytime { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 5002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacyeventcode_5002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 5002 | Type: read</summary>
	public System.Object Enablerlegacyeventcode { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 5003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacyeventname_5003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 5003 | Type: read</summary>
	public System.Object Enablerlegacyeventname { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 5004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerlegacypayload_5004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 5004 | Type: read</summary>
	public System.Object Enablerlegacypayload { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public EnablerlegacyQActionRow() : base(0, 4) { }
	public EnablerlegacyQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator EnablerlegacyQActionRow(System.Object[] source) { return new EnablerlegacyQActionRow(source); }
	public static implicit operator System.Object[](EnablerlegacyQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class EnablerscteQActionRow : QActionTableRow
{
	/// <summary>PID: 6001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablersctetime_6001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 6001 | Type: read</summary>
	public System.Object Enablersctetime { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 6002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerscteeventcode_6002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 6002 | Type: read</summary>
	public System.Object Enablerscteeventcode { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 6003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablerscteeventname_6003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 6003 | Type: read</summary>
	public System.Object Enablerscteeventname { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 6004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enablersctepayload_6004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 6004 | Type: read</summary>
	public System.Object Enablersctepayload { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public EnablerscteQActionRow() : base(0, 4) { }
	public EnablerscteQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator EnablerscteQActionRow(System.Object[] source) { return new EnablerscteQActionRow(source); }
	public static implicit operator System.Object[](EnablerscteQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class XprintQActionRow : QActionTableRow
{
	/// <summary>PID: 7001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintindex_7001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 7001 | Type: read</summary>
	public System.Object Xprintindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 7002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintdate_7002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 7002 | Type: read</summary>
	public System.Object Xprintdate { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 7003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintadsales_7003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 7003 | Type: read</summary>
	public System.Object Xprintadsales { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 7004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintwhatson_7004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 7004 | Type: read</summary>
	public System.Object Xprintwhatson { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 7005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprintmediator_7005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 7005 | Type: read</summary>
	public System.Object Xprintmediator { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 7006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Xprinterrors_7006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 7006 | Type: read</summary>
	public System.Object Xprinterrors { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public XprintQActionRow() : base(0, 6) { }
	public XprintQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator XprintQActionRow(System.Object[] source) { return new XprintQActionRow(source); }
	public static implicit operator System.Object[](XprintQActionRow source) { return source.ToObjectArray(); }
}
}
